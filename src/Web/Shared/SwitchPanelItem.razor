@using Heimdall.Models.Dto

<AuthorizeView>
    <div class="form-check form-switch">
        @if (!this.LoadAttempted)
        {
            <div class="spinner-border spinner-border-sm me-4" style="margin-left:-40px" role="status"></div>
        }
        else
        {
            @if (this.Switch.State == SwitchState.Unknown)
            {
                <span class="me-3" style="margin-left:-40px; cursor:default" role="status">&#x274C;</span>
            }
            else
            {
                <input class="form-check-input"
                   type="checkbox" 
                   role="checkbox" 
                   id="@("SWITCH_" + this.Switch.Id)"
                   checked=@(this.Switch.State == SwitchState.On)
                   disabled=@(context.User.HasWriteLevelAccess() != true)
                   @onchange="CheckboxChangedAsync"/>
            }
        }

        <label class="form-check-label" for="@("SWITCH_" + this.Switch.Id)">@this.Switch.Label</label>
    </div>
</AuthorizeView>

@code {
    [Parameter]
    [EditorRequired]
    public SwitchInfo Switch { get; set; }

    private bool LoadAttempted { get; set; } = false;
}
