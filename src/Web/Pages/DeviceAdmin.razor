@page "/deviceadmin"
@using Heimdall.Models

<h1 class="mb-4">Manage Devices</h1>

<AuthorizeView>
    @if (!context.User.HasDeviceAdminAccess())
    {
        <div class="alert alert-warning" role="alert">
            &#9888;&#65039; You don't have access to manage devices.
        </div>
    }
    else
    {
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-9 justify-content-start">
                    <DeviceTable @ref="DeviceTable" />
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <button class="btn btn-primary" @onclick="() => this.NewDeviceModal.Open()">+ Add</button>
                </div>
            </div>
        </div>

        <FormModal @ref="NewDeviceModal"
                   TModel="Device"
                   FormTitle="New Device"
                   AsyncSaveDelegate="this.CreateDeviceAsync">

            <div class="form-floating row mb-4">
                <EnumValuePicker TEnum=DeviceType
                                 ExcludeValues='new[]{ DeviceType.Unknown }'
                                 id="newDeviceType"
                                 class="form-select"
                                 placeholder="Device Type"
                                 @bind-Value="NewDeviceModal.Model.Type" />
                <label for="newDeviceType">Device Type</label>
                <ValidationMessage For="@(() => NewDeviceModal.Model.Type)" />
            </div>

            <div class="form-floating row mb-4">
                <InputText id="newDeviceName"
                            class="form-control"
                            placeholder="Device Name"
                            @bind-Value="NewDeviceModal.Model.Name" />
                <label for="newDeviceName">Device Name</label>
                <ValidationMessage For="@(() => NewDeviceModal.Model.Name)" />
            </div>

            <div class="form-floating row mb-4">
                <InputText id="newDeviceHost"
                            class="form-control"
                            placeholder="Device Host or IP Address"
                            @bind-Value="NewDeviceModal.Model.HostOrIPAddress" />
                <label for="newDeviceHost">Device Host or IP Address</label>
                <ValidationMessage For="@(() => NewDeviceModal.Model.HostOrIPAddress)" />
            </div>
        </FormModal>
    }
</AuthorizeView>